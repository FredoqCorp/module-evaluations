DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
        CREATE SCHEMA evaluations;
    END IF;
END $EF$;
CREATE TABLE IF NOT EXISTS evaluations."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
            CREATE SCHEMA evaluations;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        description text NOT NULL,
        title text NOT NULL,
        CONSTRAINT "PK_criteria" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.form_runs (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        launched_by character varying(100) NOT NULL,
        launched_at timestamp with time zone NOT NULL,
        first_saved_by character varying(100),
        first_saved_at timestamp with time zone,
        last_saved_by character varying(100),
        last_saved_at timestamp with time zone,
        published_by character varying(100),
        published_at timestamp with time zone,
        context jsonb NOT NULL,
        current_total numeric(10,2),
        viewed_at timestamp with time zone,
        agreement_status character varying(16),
        decided_at timestamp with time zone,
        run_for character varying(128) NOT NULL,
        supervisor_comment text,
        form_code text NOT NULL,
        form_id bigint NOT NULL,
        CONSTRAINT "PK_form_runs" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.forms (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        status character varying(16) NOT NULL,
        valid_from timestamp with time zone,
        valid_to timestamp with time zone,
        created_by character varying(100) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        updated_by character varying(100),
        updated_at timestamp with time zone,
        state_changed_by character varying(100),
        state_changed_at timestamp with time zone,
        calculation character varying(32) NOT NULL,
        description text,
        tags jsonb NOT NULL,
        code text NOT NULL,
        name text NOT NULL,
        CONSTRAINT "PK_forms" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_forms_code_unique ON evaluations.forms (code);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.form_groups (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        form_id bigint,
        parent_group_id bigint,
        title text NOT NULL,
        order_index integer NOT NULL,
        weight numeric(10,2),
        CONSTRAINT pk_form_groups PRIMARY KEY (id),
        CONSTRAINT ck_form_groups_owner CHECK (((form_id IS NULL) <> (parent_group_id IS NULL))),
        CONSTRAINT fk_form_groups_forms_form_id FOREIGN KEY (form_id) REFERENCES evaluations.forms (id) ON DELETE CASCADE,
        CONSTRAINT fk_form_groups_form_groups_parent_group_id FOREIGN KEY (parent_group_id) REFERENCES evaluations.form_groups (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_groups_root_order_unique ON evaluations.form_groups (form_id, order_index) WHERE parent_group_id IS NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_groups_nested_order_unique ON evaluations.form_groups (parent_group_id, order_index) WHERE parent_group_id IS NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.form_criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        form_id bigint,
        group_id bigint,
        criterion_id bigint NOT NULL,
        order_index integer NOT NULL,
        weight numeric(10,2),
        CONSTRAINT pk_form_criteria PRIMARY KEY (id),
        CONSTRAINT ck_form_criteria_owner CHECK (((form_id IS NULL) <> (group_id IS NULL))),
        CONSTRAINT fk_form_criteria_forms_form_id FOREIGN KEY (form_id) REFERENCES evaluations.forms (id) ON DELETE CASCADE,
        CONSTRAINT fk_form_criteria_form_groups_group_id FOREIGN KEY (group_id) REFERENCES evaluations.form_groups (id) ON DELETE CASCADE,
        CONSTRAINT fk_form_criteria_criteria_criterion_id FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_criteria_root_order_unique ON evaluations.form_criteria (form_id, order_index) WHERE group_id IS NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_criteria_group_order_unique ON evaluations.form_criteria (group_id, order_index) WHERE group_id IS NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_criteria_root_unique ON evaluations.form_criteria (form_id, criterion_id) WHERE group_id IS NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_form_criteria_group_unique ON evaluations.form_criteria (group_id, criterion_id) WHERE group_id IS NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.criterion_automation (
        criterion_id bigint NOT NULL,
        auto_source_key text NOT NULL,
        auto_goal character varying(16) NOT NULL,
        CONSTRAINT "PK_criterion_automation" PRIMARY KEY (criterion_id),
        CONSTRAINT "FK_criterion_automation_criteria_criterion_id" FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.criterion_options (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        score smallint NOT NULL,
        caption text,
        annotation text,
        threshold numeric(10,2),
        criterion_id bigint NOT NULL,
        CONSTRAINT "PK_criterion_options" PRIMARY KEY (id),
        CONSTRAINT "FK_criterion_options_criteria_criterion_id" FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE TABLE evaluations.run_criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        criterion_id bigint NOT NULL,
        skipped boolean NOT NULL,
        selected_score integer,
        comment text,
        auto_parameter_key text,
        auto_value numeric(10,2),
        run_id bigint NOT NULL,
        CONSTRAINT "PK_run_criteria" PRIMARY KEY (id),
        CONSTRAINT "FK_run_criteria_form_runs_run_id" FOREIGN KEY (run_id) REFERENCES evaluations.form_runs (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE INDEX ix_criterion_options_fk ON evaluations.criterion_options (criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE INDEX ix_criterion_options_score ON evaluations.criterion_options (score);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    CREATE UNIQUE INDEX ix_run_criteria_unique ON evaluations.run_criteria (run_id, criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250815111028_InitialEvaluationFormSchema') THEN
    INSERT INTO evaluations."__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250815111028_InitialEvaluationFormSchema', '9.0.8');
    END IF;
END $EF$;
COMMIT;

