DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
        CREATE SCHEMA evaluations;
    END IF;
END $EF$;
CREATE TABLE IF NOT EXISTS evaluations."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
            CREATE SCHEMA evaluations;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
            CREATE SCHEMA evaluations;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TYPE evaluations.form_calculation_kind AS ENUM ('arithmetic_mean', 'weighted_mean');
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
            CREATE SCHEMA evaluations;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TYPE evaluations.form_status AS ENUM ('archived', 'draft', 'published');
        IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'evaluations') THEN
            CREATE SCHEMA evaluations;
        END IF;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TYPE evaluations.optimization_goal AS ENUM ('maximize', 'minimize');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        description text NOT NULL,
        title text NOT NULL,
        CONSTRAINT "PK_criteria" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.evaluation_forms (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        status evaluations.form_status NOT NULL,
        valid_from timestamp with time zone,
        valid_to timestamp with time zone,
        created_by character varying(100) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        updated_by character varying(100),
        updated_at timestamp with time zone,
        state_changed_by character varying(100),
        state_changed_at timestamp with time zone,
        calculation_kind evaluations.form_calculation_kind NOT NULL,
        description text,
        tags text[] NOT NULL DEFAULT ('{}'::text[]),
        code text NOT NULL,
        name text NOT NULL,
        CONSTRAINT "PK_evaluation_forms" PRIMARY KEY (id),
        CONSTRAINT ck_eval_forms_validity_presence CHECK ((valid_from IS NULL AND valid_to IS NULL) OR (valid_from IS NOT NULL)),
        CONSTRAINT ck_eval_forms_validity_range CHECK (valid_to IS NULL OR valid_from <= valid_to),
        CONSTRAINT "CK_evalform_statechg_all_or_none" CHECK ((state_changed_by IS NULL) = (state_changed_at IS NULL)),
        CONSTRAINT "CK_evalform_updated_all_or_none" CHECK ((updated_by IS NULL) = (updated_at IS NULL))
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.form_runs (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        launched_by character varying(100) NOT NULL,
        launched_at timestamp with time zone NOT NULL,
        first_saved_by character varying(100),
        first_saved_at timestamp with time zone,
        last_saved_by character varying(100),
        last_saved_at timestamp with time zone,
        published_by character varying(100),
        published_at timestamp with time zone,
        context jsonb NOT NULL,
        current_total numeric(10,2),
        viewed_at timestamp with time zone,
        agreement_status character varying(16),
        decided_at timestamp with time zone,
        run_for character varying(128) NOT NULL,
        supervisor_comment text,
        form_code text NOT NULL,
        form_id bigint NOT NULL,
        CONSTRAINT "PK_form_runs" PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.criterion_automation (
        criterion_id bigint NOT NULL,
        auto_source_key text NOT NULL,
        auto_goal evaluations.optimization_goal NOT NULL,
        CONSTRAINT "PK_criterion_automation" PRIMARY KEY (criterion_id),
        CONSTRAINT "FK_criterion_automation_criteria_criterion_id" FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.criterion_options (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        score smallint NOT NULL,
        caption text,
        annotation text,
        threshold numeric(10,2),
        criterion_id bigint NOT NULL,
        CONSTRAINT "PK_criterion_options" PRIMARY KEY (id),
        CONSTRAINT "FK_criterion_options_criteria_criterion_id" FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.form_groups (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        title text NOT NULL,
        weight smallint,
        form_id bigint NOT NULL,
        parent_id bigint,
        order_index integer NOT NULL,
        CONSTRAINT "PK_form_groups" PRIMARY KEY (id),
        CONSTRAINT "CK_form_group_weight" CHECK (weight IS NULL OR weight BETWEEN 0 AND 10000),
        CONSTRAINT ck_form_groups_order_non_negative CHECK (order_index >= 0),
        CONSTRAINT "FK_form_groups_evaluation_forms_form_id" FOREIGN KEY (form_id) REFERENCES evaluations.evaluation_forms (id) ON DELETE CASCADE,
        CONSTRAINT "FK_form_groups_form_groups_parent_id" FOREIGN KEY (parent_id) REFERENCES evaluations.form_groups (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.run_criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        criterion_id bigint NOT NULL,
        skipped boolean NOT NULL,
        selected_score integer,
        comment text,
        auto_parameter_key text,
        auto_value numeric(10,2),
        run_id bigint NOT NULL,
        CONSTRAINT "PK_run_criteria" PRIMARY KEY (id),
        CONSTRAINT "FK_run_criteria_form_runs_run_id" FOREIGN KEY (run_id) REFERENCES evaluations.form_runs (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE TABLE evaluations.form_criteria (
        id bigint GENERATED BY DEFAULT AS IDENTITY,
        criterion_id bigint NOT NULL,
        weight smallint,
        form_id bigint,
        group_id bigint,
        order_index integer NOT NULL,
        CONSTRAINT "PK_form_criteria" PRIMARY KEY (id),
        CONSTRAINT ck_form_criteria_order_non_negative CHECK (order_index >= 0),
        CONSTRAINT "CK_formcrit_weight" CHECK (weight IS NULL OR weight BETWEEN 0 AND 10000),
        CONSTRAINT "FK_form_criteria_criteria_criterion_id" FOREIGN KEY (criterion_id) REFERENCES evaluations.criteria (id) ON DELETE RESTRICT,
        CONSTRAINT "FK_form_criteria_evaluation_forms_form_id" FOREIGN KEY (form_id) REFERENCES evaluations.evaluation_forms (id) ON DELETE CASCADE,
        CONSTRAINT "FK_form_criteria_form_groups_group_id" FOREIGN KEY (group_id) REFERENCES evaluations.form_groups (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX ix_criterion_options_fk ON evaluations.criterion_options (criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX ix_criterion_options_score ON evaluations.criterion_options (score);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX ix_form_criteria_fk_criterion ON evaluations.form_criteria (criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX "IX_form_criteria_form_id" ON evaluations.form_criteria (form_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX "IX_form_criteria_group_id" ON evaluations.form_criteria (group_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX ix_form_groups_fk_form ON evaluations.form_groups (form_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE INDEX ix_form_groups_parent ON evaluations.form_groups (parent_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    CREATE UNIQUE INDEX ix_run_criteria_unique ON evaluations.run_criteria (run_id, criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM evaluations."__EFMigrationsHistory" WHERE "MigrationId" = '20250817204145_InitialCreate') THEN
    INSERT INTO evaluations."__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250817204145_InitialCreate', '9.0.8');
    END IF;
END $EF$;
COMMIT;

