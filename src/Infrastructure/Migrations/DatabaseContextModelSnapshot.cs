// <auto-generated />
using System;
using System.Collections.Generic;
using CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria;
using CascVel.Module.Evaluations.Management.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CascVel.Module.Evaluations.Management.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("evaluations")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.AutomaticParameters.AutomaticParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("caption");

                    b.Property<string>("ConditionType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("condition_type");

                    b.ComplexProperty<Dictionary<string, object>>("ServiceCode", "CascVel.Module.Evaluations.Management.Domain.Entities.AutomaticParameters.AutomaticParameter.ServiceCode#ServiceCode", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("service_code");
                        });

                    b.HasKey("Id");

                    b.HasIndex("Caption");

                    b.HasIndex("ConditionType");

                    b.ToTable("automatic_parameters", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EvaluationFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("evaluation_form_id");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order_index");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.Property<decimal>("Weight")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("weight");

                    b.Property<string>("criterion_type")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationFormId");

                    b.HasIndex("criterion_type");

                    b.ToTable("criteria", "evaluations");

                    b.HasDiscriminator<string>("criterion_type").HasValue("BaseCriterion");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Form.EvaluationForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CalculationRule")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("calculation_rule");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.PrimitiveCollection<IReadOnlyList<string>>("FormKeywords")
                        .HasColumnType("jsonb")
                        .HasColumnName("form_keywords");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("modified_by");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("StatusChangedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("status_changed_at");

                    b.Property<string>("StatusChangedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("status_changed_by");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_from");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_until");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("evaluation_forms", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.Run", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AgreementAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("agreement_at");

                    b.Property<string>("AgreementStatus")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("agreement_status");

                    b.Property<IReadOnlyDictionary<string, string>>("Context")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("context");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<string>("EvaluationFormComment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("evaluation_form_comment");

                    b.Property<long>("EvaluationFormId")
                        .HasColumnType("bigint")
                        .HasColumnName("evaluation_form_id");

                    b.Property<DateTime?>("FirstSavedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("first_saved_at");

                    b.Property<string>("FirstSavedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_saved_by");

                    b.Property<DateTime?>("LastSavedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_saved_at");

                    b.Property<string>("LastSavedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_saved_by");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published_at");

                    b.Property<string>("PublishedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("published_by");

                    b.Property<string>("RunFor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("run_for");

                    b.Property<decimal>("ScoreResult")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("score_result");

                    b.Property<DateTime?>("ViewedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("viewed_at");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("EvaluationFormId");

                    b.HasIndex("RunFor");

                    b.ToTable("runs", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunCriterionResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("AutomaticCriterionValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("automatic_value");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("comment");

                    b.Property<long?>("CriterionId")
                        .HasColumnType("bigint")
                        .HasColumnName("criterion_id");

                    b.Property<bool>("IsSkipped")
                        .HasColumnType("boolean")
                        .HasColumnName("is_skipped");

                    b.Property<long>("RunId")
                        .HasColumnType("bigint")
                        .HasColumnName("run_id");

                    b.Property<int?>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score");

                    b.HasKey("Id");

                    b.HasIndex("CriterionId");

                    b.HasIndex("RunId");

                    b.ToTable("run_criterion_results", "evaluations");
                });

            modelBuilder.Entity("criterion_children", b =>
                {
                    b.Property<long>("parent_id")
                        .HasColumnType("bigint");

                    b.Property<long>("child_id")
                        .HasColumnType("bigint");

                    b.HasKey("parent_id", "child_id");

                    b.HasIndex("child_id");

                    b.ToTable("criterion_children", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.AutomaticCriterion", b =>
                {
                    b.HasBaseType("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion");

                    b.Property<long>("AutomaticParameterId")
                        .HasColumnType("bigint")
                        .HasColumnName("automatic_parameter_id");

                    b.Property<IReadOnlyList<EvaluationOption>>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("jsonb")
                        .HasColumnName("options");

                    b.HasIndex("AutomaticParameterId");

                    b.ToTable("criteria", "evaluations");

                    b.HasDiscriminator().HasValue("automatic");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.DefaultCriterion", b =>
                {
                    b.HasBaseType("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion");

                    b.Property<IReadOnlyList<EvaluationOption>>("Options")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("jsonb")
                        .HasColumnName("options");

                    b.ToTable("criteria", "evaluations");

                    b.HasDiscriminator().HasValue("default");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.GroupCriterion", b =>
                {
                    b.HasBaseType("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion");

                    b.ToTable("criteria", "evaluations");

                    b.HasDiscriminator().HasValue("group");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Form.EvaluationForm", null)
                        .WithMany("FormCriteria")
                        .HasForeignKey("EvaluationFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunCriterionResult", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.Run", null)
                        .WithMany("RunCriterionResults")
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("criterion_children", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.BaseCriterion", null)
                        .WithMany()
                        .HasForeignKey("child_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.GroupCriterion", null)
                        .WithMany()
                        .HasForeignKey("parent_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.EvaluationCriteria.Criteria.AutomaticCriterion", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.AutomaticParameters.AutomaticParameter", "AutomaticParameter")
                        .WithMany()
                        .HasForeignKey("AutomaticParameterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AutomaticParameter");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Form.EvaluationForm", b =>
                {
                    b.Navigation("FormCriteria");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.Run", b =>
                {
                    b.Navigation("RunCriterionResults");
                });
#pragma warning restore 612, 618
        }
    }
}
