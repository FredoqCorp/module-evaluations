// <auto-generated />
using System;
using System.Collections.Generic;
using CascVel.Module.Evaluations.Management.Domain.Entities.Criteria;
using CascVel.Module.Evaluations.Management.Domain.Entities.Forms;
using CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Calculation;
using CascVel.Module.Evaluations.Management.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CascVel.Module.Evaluations.Management.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250817201416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("evaluations")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "evaluations", "form_calculation_kind", new[] { "arithmetic_mean", "weighted_mean" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "evaluations", "form_status", new[] { "archived", "draft", "published" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "evaluations", "optimization_goal", new[] { "maximize", "minimize" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.ComplexProperty<Dictionary<string, object>>("Text", "CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion.Text#CriterionText", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("Description", "CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion.Text#CriterionText.Description#CriterionDescription", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("description");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Title", "CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion.Text#CriterionText.Title#CriterionTitle", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("title");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("criteria", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<FormCalculationKind>("Calculation")
                        .HasColumnType("evaluations.form_calculation_kind")
                        .HasColumnName("calculation_kind");

                    b.ComplexProperty<Dictionary<string, object>>("Meta", "CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm.Meta#FormMeta", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Description")
                                .HasColumnType("text")
                                .HasColumnName("description");

                            b1.Property<string[]>("Tags")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text[]")
                                .HasColumnName("tags")
                                .HasDefaultValueSql("'{}'::text[]");

                            b1.ComplexProperty<Dictionary<string, object>>("Code", "CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm.Meta#FormMeta.Code#FormCode", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("code");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Name", "CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm.Meta#FormMeta.Name#FormName", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("name");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("evaluation_forms", "evaluations", t =>
                        {
                            t.HasCheckConstraint("ck_eval_forms_validity_presence", "(valid_from IS NULL AND valid_to IS NULL) OR (valid_from IS NOT NULL)");

                            t.HasCheckConstraint("ck_eval_forms_validity_range", "valid_to IS NULL OR valid_from <= valid_to");
                        });
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormCriterion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("EvaluationFormId")
                        .HasColumnType("bigint");

                    b.Property<short?>("Weight")
                        .HasColumnType("smallint")
                        .HasColumnName("weight");

                    b.Property<long>("criterion_id")
                        .HasColumnType("bigint")
                        .HasColumnName("criterion_id");

                    b.Property<long?>("form_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("group_id")
                        .HasColumnType("bigint");

                    b.ComplexProperty<Dictionary<string, object>>("Order", "CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormCriterion.Order#OrderIndex", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("order_index");
                        });

                    b.HasKey("Id");

                    b.HasIndex("EvaluationFormId");

                    b.HasIndex("criterion_id")
                        .HasDatabaseName("ix_form_criteria_fk_criterion");

                    b.HasIndex("form_id");

                    b.HasIndex("group_id");

                    b.ToTable("form_criteria", "evaluations", t =>
                        {
                            t.HasCheckConstraint("CK_formcrit_weight", "weight IS NULL OR weight BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("ck_form_criteria_order_non_negative", "order_index >= 0");

                            t.HasCheckConstraint("ck_form_criteria_weight_percent_range", "weight_percent IS NULL OR (weight_percent >= 0 AND weight_percent <= 100)");
                        });
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("EvaluationFormId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FormGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<short?>("Weight")
                        .HasColumnType("smallint")
                        .HasColumnName("weight");

                    b.Property<long>("form_id")
                        .HasColumnType("bigint")
                        .HasColumnName("form_id");

                    b.Property<long?>("parent_id")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id");

                    b.ComplexProperty<Dictionary<string, object>>("Order", "CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup.Order#OrderIndex", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("order_index");
                        });

                    b.HasKey("Id");

                    b.HasIndex("EvaluationFormId");

                    b.HasIndex("FormGroupId");

                    b.HasIndex("form_id")
                        .HasDatabaseName("ix_form_groups_fk_form");

                    b.HasIndex("parent_id")
                        .HasDatabaseName("ix_form_groups_parent");

                    b.ToTable("form_groups", "evaluations", t =>
                        {
                            t.HasCheckConstraint("CK_form_group_weight", "weight IS NULL OR weight BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("ck_form_groups_order_non_negative", "order_index >= 0");
                        });
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.FormRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.ComplexProperty<Dictionary<string, object>>("Meta", "CascVel.Module.Evaluations.Management.Domain.Entities.Runs.FormRun.Meta#RunMeta", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("RunFor")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("character varying(128)")
                                .HasColumnName("run_for");

                            b1.Property<string>("SupervisorComment")
                                .HasColumnType("text")
                                .HasColumnName("supervisor_comment");

                            b1.ComplexProperty<Dictionary<string, object>>("Form", "CascVel.Module.Evaluations.Management.Domain.Entities.Runs.FormRun.Meta#RunMeta.Form#RunFormRef", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("FormCode")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("form_code");

                                    b2.Property<long>("FormId")
                                        .HasColumnType("bigint")
                                        .HasColumnName("form_id");
                                });
                        });

                    b.HasKey("Id");

                    b.ToTable("form_runs", "evaluations");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion", b =>
                {
                    b.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.AutoSelection", "Automation", b1 =>
                        {
                            b1.Property<long>("criterion_id")
                                .HasColumnType("bigint");

                            b1.HasKey("criterion_id");

                            b1.ToTable("criterion_automation", "evaluations");

                            b1.WithOwner()
                                .HasForeignKey("criterion_id");

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.AutoRule", "Rule", b2 =>
                                {
                                    b2.Property<long>("AutoSelectioncriterion_id")
                                        .HasColumnType("bigint");

                                    b2.HasKey("AutoSelectioncriterion_id");

                                    b2.ToTable("criterion_automation", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("AutoSelectioncriterion_id");

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.ThresholdPolicy", "ThresholdPolicy", b3 =>
                                        {
                                            b3.Property<long>("AutoRuleAutoSelectioncriterion_id")
                                                .HasColumnType("bigint");

                                            b3.Property<OptimizationGoal>("Goal")
                                                .HasColumnType("evaluations.optimization_goal")
                                                .HasColumnName("auto_goal");

                                            b3.HasKey("AutoRuleAutoSelectioncriterion_id");

                                            b3.ToTable("criterion_automation", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("AutoRuleAutoSelectioncriterion_id");
                                        });

                                    b2.Navigation("ThresholdPolicy")
                                        .IsRequired();
                                });

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.AutoSource", "Source", b2 =>
                                {
                                    b2.Property<long>("AutoSelectioncriterion_id")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ParameterKey")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("auto_source_key");

                                    b2.HasKey("AutoSelectioncriterion_id");

                                    b2.ToTable("criterion_automation", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("AutoSelectioncriterion_id");
                                });

                            b1.Navigation("Rule")
                                .IsRequired();

                            b1.Navigation("Source")
                                .IsRequired();
                        });

                    b.OwnsMany("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Option", "Options", b1 =>
                        {
                            b1.Property<long>("id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<long>("id"));

                            b1.Property<string>("Annotation")
                                .HasColumnType("text")
                                .HasColumnName("annotation");

                            b1.Property<string>("Caption")
                                .HasColumnType("text")
                                .HasColumnName("caption");

                            b1.Property<short>("Score")
                                .HasColumnType("smallint")
                                .HasColumnName("score");

                            b1.Property<decimal?>("Threshold")
                                .HasPrecision(10, 2)
                                .HasColumnType("numeric(10,2)")
                                .HasColumnName("threshold");

                            b1.Property<long>("criterion_id")
                                .HasColumnType("bigint");

                            b1.HasKey("id");

                            b1.HasIndex("Score")
                                .HasDatabaseName("ix_criterion_options_score");

                            b1.HasIndex("criterion_id")
                                .HasDatabaseName("ix_criterion_options_fk");

                            b1.ToTable("criterion_options", "evaluations");

                            b1.WithOwner()
                                .HasForeignKey("criterion_id");
                        });

                    b.Navigation("Automation");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", b =>
                {
                    b.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormLifecycle", "Lifecycle", b1 =>
                        {
                            b1.Property<long>("EvaluationFormId")
                                .HasColumnType("bigint");

                            b1.Property<FormStatus>("Status")
                                .HasColumnType("evaluations.form_status")
                                .HasColumnName("status");

                            b1.HasKey("EvaluationFormId");

                            b1.ToTable("evaluation_forms", "evaluations");

                            b1.WithOwner()
                                .HasForeignKey("EvaluationFormId");

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.AuditTrail", "Audit", b2 =>
                                {
                                    b2.Property<long>("FormLifecycleEvaluationFormId")
                                        .HasColumnType("bigint");

                                    b2.HasKey("FormLifecycleEvaluationFormId");

                                    b2.ToTable("evaluation_forms", "evaluations", t =>
                                        {
                                            t.HasCheckConstraint("CK_evalform_statechg_all_or_none", "(state_changed_by IS NULL) = (state_changed_at IS NULL)");

                                            t.HasCheckConstraint("CK_evalform_updated_all_or_none", "(updated_by IS NULL) = (updated_at IS NULL)");
                                        });

                                    b2.WithOwner()
                                        .HasForeignKey("FormLifecycleEvaluationFormId");

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "Created", b3 =>
                                        {
                                            b3.Property<long>("AuditTrailFormLifecycleEvaluationFormId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("created_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("created_by");

                                            b3.HasKey("AuditTrailFormLifecycleEvaluationFormId");

                                            b3.ToTable("evaluation_forms", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("AuditTrailFormLifecycleEvaluationFormId");
                                        });

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "StateChanged", b3 =>
                                        {
                                            b3.Property<long>("AuditTrailFormLifecycleEvaluationFormId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("state_changed_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("state_changed_by");

                                            b3.HasKey("AuditTrailFormLifecycleEvaluationFormId");

                                            b3.ToTable("evaluation_forms", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("AuditTrailFormLifecycleEvaluationFormId");
                                        });

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "Updated", b3 =>
                                        {
                                            b3.Property<long>("AuditTrailFormLifecycleEvaluationFormId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("updated_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("updated_by");

                                            b3.HasKey("AuditTrailFormLifecycleEvaluationFormId");

                                            b3.ToTable("evaluation_forms", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("AuditTrailFormLifecycleEvaluationFormId");
                                        });

                                    b2.Navigation("Created")
                                        .IsRequired();

                                    b2.Navigation("StateChanged");

                                    b2.Navigation("Updated");
                                });

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.ValueObjects.Period", "Validity", b2 =>
                                {
                                    b2.Property<long>("FormLifecycleEvaluationFormId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTime?>("End")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("valid_to");

                                    b2.Property<DateTime>("Start")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("valid_from");

                                    b2.HasKey("FormLifecycleEvaluationFormId");

                                    b2.ToTable("evaluation_forms", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("FormLifecycleEvaluationFormId");
                                });

                            b1.Navigation("Audit")
                                .IsRequired();

                            b1.Navigation("Validity");
                        });

                    b.Navigation("Lifecycle")
                        .IsRequired();
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormCriterion", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", null)
                        .WithMany("Criteria")
                        .HasForeignKey("EvaluationFormId");

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Criteria.Criterion", "Criterion")
                        .WithMany()
                        .HasForeignKey("criterion_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", null)
                        .WithMany()
                        .HasForeignKey("form_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", null)
                        .WithMany("Criteria")
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Criterion");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", b =>
                {
                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", null)
                        .WithMany("Groups")
                        .HasForeignKey("EvaluationFormId");

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", null)
                        .WithMany("Groups")
                        .HasForeignKey("FormGroupId");

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", null)
                        .WithMany()
                        .HasForeignKey("form_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", null)
                        .WithMany()
                        .HasForeignKey("parent_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.FormRun", b =>
                {
                    b.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunState", "State", b1 =>
                        {
                            b1.Property<long>("FormRunId")
                                .HasColumnType("bigint");

                            b1.HasKey("FormRunId");

                            b1.ToTable("form_runs", "evaluations");

                            b1.WithOwner()
                                .HasForeignKey("FormRunId");

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunAgreementTrail", "Agreement", b2 =>
                                {
                                    b2.Property<long>("RunStateFormRunId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTime?>("DecidedAt")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("decided_at");

                                    b2.Property<string>("Status")
                                        .HasMaxLength(16)
                                        .HasColumnType("character varying(16)")
                                        .HasColumnName("agreement_status");

                                    b2.Property<DateTime?>("ViewedAt")
                                        .HasColumnType("timestamp with time zone")
                                        .HasColumnName("viewed_at");

                                    b2.HasKey("RunStateFormRunId");

                                    b2.ToTable("form_runs", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("RunStateFormRunId");
                                });

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunContext", "Context", b2 =>
                                {
                                    b2.Property<long>("RunStateFormRunId")
                                        .HasColumnType("bigint");

                                    b2.Property<IReadOnlyDictionary<string, string>>("Items")
                                        .IsRequired()
                                        .HasColumnType("jsonb")
                                        .HasColumnName("context");

                                    b2.HasKey("RunStateFormRunId");

                                    b2.ToTable("form_runs", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("RunStateFormRunId");
                                });

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunLifecycle", "Lifecycle", b2 =>
                                {
                                    b2.Property<long>("RunStateFormRunId")
                                        .HasColumnType("bigint");

                                    b2.HasKey("RunStateFormRunId");

                                    b2.ToTable("form_runs", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("RunStateFormRunId");

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "FirstSaved", b3 =>
                                        {
                                            b3.Property<long>("RunLifecycleRunStateFormRunId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("first_saved_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("first_saved_by");

                                            b3.HasKey("RunLifecycleRunStateFormRunId");

                                            b3.ToTable("form_runs", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("RunLifecycleRunStateFormRunId");
                                        });

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "LastSaved", b3 =>
                                        {
                                            b3.Property<long>("RunLifecycleRunStateFormRunId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("last_saved_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("last_saved_by");

                                            b3.HasKey("RunLifecycleRunStateFormRunId");

                                            b3.ToTable("form_runs", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("RunLifecycleRunStateFormRunId");
                                        });

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "Launched", b3 =>
                                        {
                                            b3.Property<long>("RunLifecycleRunStateFormRunId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("launched_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("launched_by");

                                            b3.HasKey("RunLifecycleRunStateFormRunId");

                                            b3.ToTable("form_runs", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("RunLifecycleRunStateFormRunId");
                                        });

                                    b2.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.Stamp", "Published", b3 =>
                                        {
                                            b3.Property<long>("RunLifecycleRunStateFormRunId")
                                                .HasColumnType("bigint");

                                            b3.Property<DateTime>("At")
                                                .HasColumnType("timestamp with time zone")
                                                .HasColumnName("published_at");

                                            b3.Property<string>("UserId")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("character varying(100)")
                                                .HasColumnName("published_by");

                                            b3.HasKey("RunLifecycleRunStateFormRunId");

                                            b3.ToTable("form_runs", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("RunLifecycleRunStateFormRunId");
                                        });

                                    b2.Navigation("FirstSaved");

                                    b2.Navigation("LastSaved");

                                    b2.Navigation("Launched")
                                        .IsRequired();

                                    b2.Navigation("Published");
                                });

                            b1.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunResult", "Result", b2 =>
                                {
                                    b2.Property<long>("RunStateFormRunId")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal?>("CurrentTotal")
                                        .HasPrecision(10, 2)
                                        .HasColumnType("numeric(10,2)")
                                        .HasColumnName("current_total");

                                    b2.HasKey("RunStateFormRunId");

                                    b2.ToTable("form_runs", "evaluations");

                                    b2.WithOwner()
                                        .HasForeignKey("RunStateFormRunId");

                                    b2.OwnsMany("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunCriterionScore", "Criteria", b3 =>
                                        {
                                            b3.Property<long>("id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("bigint");

                                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b3.Property<long>("id"));

                                            b3.Property<long>("CriterionId")
                                                .HasColumnType("bigint")
                                                .HasColumnName("criterion_id");

                                            b3.Property<bool>("Skipped")
                                                .HasColumnType("boolean")
                                                .HasColumnName("skipped");

                                            b3.Property<long>("run_id")
                                                .HasColumnType("bigint");

                                            b3.HasKey("id");

                                            b3.HasIndex("run_id", "CriterionId")
                                                .IsUnique()
                                                .HasDatabaseName("ix_run_criteria_unique");

                                            b3.ToTable("run_criteria", "evaluations");

                                            b3.WithOwner()
                                                .HasForeignKey("run_id");

                                            b3.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.CriterionAssessment", "Assessment", b4 =>
                                                {
                                                    b4.Property<long>("RunCriterionScoreid")
                                                        .HasColumnType("bigint");

                                                    b4.Property<string>("Comment")
                                                        .HasColumnType("text")
                                                        .HasColumnName("comment");

                                                    b4.Property<int>("SelectedScore")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("selected_score");

                                                    b4.HasKey("RunCriterionScoreid");

                                                    b4.ToTable("run_criteria", "evaluations");

                                                    b4.WithOwner()
                                                        .HasForeignKey("RunCriterionScoreid");

                                                    b4.OwnsOne("CascVel.Module.Evaluations.Management.Domain.Entities.Runs.RunAutoEvidence", "Auto", b5 =>
                                                        {
                                                            b5.Property<long>("CriterionAssessmentRunCriterionScoreid")
                                                                .HasColumnType("bigint");

                                                            b5.Property<string>("ParameterKey")
                                                                .IsRequired()
                                                                .HasColumnType("text")
                                                                .HasColumnName("auto_parameter_key");

                                                            b5.Property<decimal>("Value")
                                                                .HasPrecision(10, 2)
                                                                .HasColumnType("numeric(10,2)")
                                                                .HasColumnName("auto_value");

                                                            b5.HasKey("CriterionAssessmentRunCriterionScoreid");

                                                            b5.ToTable("run_criteria", "evaluations");

                                                            b5.WithOwner()
                                                                .HasForeignKey("CriterionAssessmentRunCriterionScoreid");
                                                        });

                                                    b4.Navigation("Auto");
                                                });

                                            b3.Navigation("Assessment");
                                        });

                                    b2.Navigation("Criteria");
                                });

                            b1.Navigation("Agreement");

                            b1.Navigation("Context")
                                .IsRequired();

                            b1.Navigation("Lifecycle")
                                .IsRequired();

                            b1.Navigation("Result")
                                .IsRequired();
                        });

                    b.Navigation("State")
                        .IsRequired();
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.EvaluationForm", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("CascVel.Module.Evaluations.Management.Domain.Entities.Forms.FormGroup", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
