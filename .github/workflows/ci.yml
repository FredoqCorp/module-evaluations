name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build, Lint, Test
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
      DOTNET_NOLOGO: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/*.csproj
            Directory.Packages.props

      - name: Restore
        run: dotnet restore

      - name: Lint (dotnet format)
        run: |
          dotnet format \
            --verify-no-changes \
            --verbosity minimal \
            --exclude src/Infrastructure/Migrations \
            --exclude "**/*ModelSnapshot.cs"

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test with coverage
        run: |
          dotnet test -c Release \
            --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory ./TestResults \
            --collect "XPlat Code Coverage"

      - name: Upload test results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/TestResults/**/*.trx
            **/TestResults/**/coverage.cobertura.xml
          if-no-files-found: ignore

      - name: Code coverage summary
        if: ${{ always() && hashFiles('**/TestResults/**/coverage.cobertura.xml') != '' }}
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: '**/TestResults/**/coverage.cobertura.xml'
          format: cobertura
          output: both
          badge: true
          fail_below_min: false

      - name: Append coverage to Job Summary
        if: always()
        run: |
          if [ -f code-coverage-results.md ]; then
            cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"
          fi
