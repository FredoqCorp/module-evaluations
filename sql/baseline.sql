CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE automatic_parameters (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        caption character varying(200) NOT NULL,
        condition_type character varying(32) NOT NULL,
        service_code character varying(50) NOT NULL,
        CONSTRAINT "PK_automatic_parameters" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE evaluation_forms (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        title character varying(200) NOT NULL,
        code character varying(100) NOT NULL,
        description character varying(1000),
        status character varying(32) NOT NULL,
        created_by character varying(100) NOT NULL,
        created_at timestamp with time zone NOT NULL,
        status_changed_by character varying(100),
        status_changed_at timestamp with time zone,
        modified_by character varying(100),
        modified_at timestamp with time zone,
        valid_from timestamp with time zone,
        valid_until timestamp with time zone,
        calculation_rule character varying(32) NOT NULL,
        form_keywords jsonb,
        CONSTRAINT "PK_evaluation_forms" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE runs (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        run_for character varying(100) NOT NULL,
        score_result numeric(10,2) NOT NULL,
        last_saved_at timestamp with time zone,
        last_saved_by character varying(100),
        first_saved_at timestamp with time zone,
        first_saved_by character varying(100),
        published_at timestamp with time zone,
        published_by character varying(100),
        created_at timestamp with time zone NOT NULL,
        created_by character varying(100) NOT NULL,
        context jsonb NOT NULL,
        evaluation_form_id bigint NOT NULL,
        evaluation_form_comment character varying(1000),
        viewed_at timestamp with time zone,
        agreement_status character varying(32),
        agreement_at timestamp with time zone,
        CONSTRAINT "PK_runs" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE criteria (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        title character varying(200) NOT NULL,
        weight numeric(10,2) NOT NULL,
        order_index integer NOT NULL,
        evaluation_form_id bigint NOT NULL,
        criterion_type character varying(13) NOT NULL,
        automatic_parameter_id bigint,
        options jsonb,
        CONSTRAINT "PK_criteria" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_criteria_automatic_parameters_automatic_parameter_id" FOREIGN KEY (automatic_parameter_id) REFERENCES automatic_parameters ("Id") ON DELETE RESTRICT,
        CONSTRAINT "FK_criteria_evaluation_forms_evaluation_form_id" FOREIGN KEY (evaluation_form_id) REFERENCES evaluation_forms ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE run_criterion_results (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        comment character varying(1000),
        is_skipped boolean NOT NULL,
        automatic_value numeric(10,2),
        score integer,
        criterion_id bigint,
        run_id bigint NOT NULL,
        CONSTRAINT "PK_run_criterion_results" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_run_criterion_results_runs_run_id" FOREIGN KEY (run_id) REFERENCES runs ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE TABLE criterion_children (
        parent_id bigint NOT NULL,
        child_id bigint NOT NULL,
        CONSTRAINT "PK_criterion_children" PRIMARY KEY (parent_id, child_id),
        CONSTRAINT "FK_criterion_children_criteria_child_id" FOREIGN KEY (child_id) REFERENCES criteria ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_criterion_children_criteria_parent_id" FOREIGN KEY (parent_id) REFERENCES criteria ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_automatic_parameters_caption" ON automatic_parameters (caption);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_automatic_parameters_condition_type" ON automatic_parameters (condition_type);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_criteria_automatic_parameter_id" ON criteria (automatic_parameter_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_criteria_criterion_type" ON criteria (criterion_type);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_criteria_evaluation_form_id" ON criteria (evaluation_form_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_criterion_children_child_id" ON criterion_children (child_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE UNIQUE INDEX "IX_evaluation_forms_code" ON evaluation_forms (code);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_evaluation_forms_status" ON evaluation_forms (status);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_run_criterion_results_criterion_id" ON run_criterion_results (criterion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_run_criterion_results_run_id" ON run_criterion_results (run_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_runs_created_at" ON runs (created_at);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_runs_evaluation_form_id" ON runs (evaluation_form_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    CREATE INDEX "IX_runs_run_for" ON runs (run_for);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250811140825_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250811140825_InitialCreate', '9.0.8');
    END IF;
END $EF$;
COMMIT;

